let name = "Hello How are you?"
let name = 'Hello How are you?'

Template Strings
Templates are strings enclosed in backticks (`This is a template string`).

Templates allow single and double quotes inside a string:

let blockquote = `the world is "wonder"`
blockquote.length

let text = "Hello, \" How are you? \" "

show multiline "" and allowed backticks  `
The new keyword complicates the code and slows down execution speed.

String objects can produce unexpected results:


Show: let x1 ="j"
let y = new String("j")
typeof x1
x1 == y
x1 === y
every object is unique and can't be compared


****************

console.log("Hello".length); // 5
console.log("Hello".charAt(1)); // 'e'
console.log("Hello".charCodeAt(1)); // 101
console.log("Hello".at(1)); // 'e'
console.log("Hello"[1]); // 'e'
console.log("Hello".slice(1, 4)); // 'ell'
console.log("Hello".substring(1, 4)); // 'ell'
console.log("Hello".substr(1, 3)); // 'ell'
console.log("Hello".toUpperCase()); // 'HELLO'
console.log("HELLO".toLowerCase()); // 'hello'
console.log("Hello".concat(" World")); // 'Hello World'
console.log("  Hello  ".trim()); // 'Hello'
console.log("  Hello  ".trimStart()); // 'Hello  '
console.log("  Hello  ".trimEnd()); // '  Hello'
console.log("Hello".padStart(10, '*')); // '*****Hello'
console.log("Hello".padEnd(10, '*')); // 'Hello*****'
console.log("Hello".repeat(3)); // 'HelloHelloHello'
console.log("Hello World".replace("World", "JS")); // 'Hello JS'
 console.log("Hello World World".replaceAll("World", "JS")); // 'Hello JS JS'
console.log("Hello World".split(" ")); // ['Hello', 'World']
positive for position or -1 for no position:

interpolation - templates with backtick and $:
let text = `Welcome ${firstName}, ${lastName}!`;

console.log("Hello World".indexOf("o")); // 4
console.log("Hello World".lastIndexOf("o")); // 7
console.log("Hello World".search("World")); // 6
console.log("Hello World".match(/o/g)); // ['o', 'o']
console.log([... "Hello World".matchAll(/o/g)]); // [ [ 'o', index: 4, input: 'Hello World', groups: undefined ], [ 'o', index: 7, input: 'Hello World', groups: undefined ] ]
console.log("Hello World".includes("World")); // true
console.log("Hello World".startsWith("Hello")); // true
console.log("Hello World".endsWith("World")); // true
